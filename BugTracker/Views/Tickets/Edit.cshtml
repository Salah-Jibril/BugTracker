@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h2>
        Edit your ticket
        <button class="pull-right btn btn-success" title="Submit Changes" type="submit" style="margin:10px"><i class="fa fa-floppy-o fa-2x"></i></button>
        <a class="pull-right" title="Back to Tickets" type="button" href="/Tickets/Index"><i class="fa fa-chevron-circle-left fa-2x"></i></a>
    </h2>
    <br />
    <hr />
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal well">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.OwnerUserId)
        @Html.HiddenFor(model => model.Created)

        <div class="container">
            <div class="col-md-5">
                <div class="form-group text-center">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.HiddenFor(model => model.Title)
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="well">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        <hr style="width:100%" />
                        <div>
                            @Html.HiddenFor(model => model.Description)
                            @Html.TextAreaFor(model => model.Description, 5, 1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled ="disabled" }, disabled="disabled", style = "width:100%; border-radius:10px", placeholder = "Enter your description of the issue here" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group well">
                    @Html.Label("Comments", htmlAttributes: new { @class = "control-label col-md-2" })
                    <br />
                    <hr style="width:100%" />
                    <div class="well pre-scrollable" style="max-height:300px">
                        @foreach (var item in Model.TicketComments)
                        {
                            
                                <div class="well" style="margin-bottom:0">
                                    @item.Comment<br />
                                <p class="pull-right" style="font-size:12px">Created on: @item.Created</p>
                                </div>
                            
                        }
                    </div>
                        <div class="col-md-12">

                            @Html.TextArea("comment", "", 5, 1, new { htmlAttributes = new { @class = "form-control", id = "comment", style = "width:100%" }, style = "width:100%; border-radius:10px; background-color: #c1f6bd;", placeholder = "Enter a new comment here" })

                        </div>
                </div>


            </div>
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Project/ Catagory", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control", style = "background-color: #c1f6bd;" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-6">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control", style = "background-color: #c1f6bd;" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (User.IsInRole("Developer"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-6">
                            @if (User.IsInRole("Project Manager"))
                            {@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control", style = "background-color: #c1f6bd;" })}
                            else
                            {@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" }) }
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-6">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control", style = "background-color: #c1f6bd;" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToUserId, "Assigned developer", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-6">
                            @if (User.IsInRole("Project Manager"))
                            { @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control", style = "background-color: #c1f6bd;" })
                                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })}
                        </div>
                    </div>
                }

                <div class="form-group well" style="margin:0">  
                    @Html.LabelFor(model => model.TicketAttachments, "Existing Attachments", htmlAttributes: new { @class = "control-label col-md-7" })
                    <br />
                    <hr style="width:100% " />                   
                            <div class="well pre-scrollable" style="max-height:300px">                                
                        @foreach (var item in Model.TicketAttachments)
                        {
                                                                                        
                                <div class="well" style="margin-bottom:0;">
                                    Download link:<a class="btn" href=@item.FileUrl download>@item.FilePath</a><br />
                                    Description: @item.Description<br />
                                    <p class="pull-right" style="font-size:12px">Created on: @item.Created</p>
                                </div>
    
                        }
                            </div>
                    <div class="col-md-12">
                        <div class="row">
                            @Html.Label("Add an attachment:", htmlAttributes: new { @class = "control-label col-md-5", style = "padding:15px" })
                            <div class="col-md-4">
                                <input type="file" id="fileUpload" name="fileUpload" style="padding:15px" />
                            </div>
                        </div>
                        @Html.TextArea("descriptions", "", 5, 1, new { htmlAttributes = new { @class = "form-control", id = "description" }, placeholder = "Enter Attachment Description", style = "width:100%; border-radius:10px; background-color: #c1f6bd;" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}



